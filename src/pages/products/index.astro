---
import MainLayout from '../../layouts/MainLayout.astro';
import ProductCard from '../../components/furniture/ProductCard.astro';
import ProductFilter from '../../components/furniture/ProductFilter.astro';
import type { FurnitureProduct } from '../../types/furniture';

// Simulación de datos de productos
// En un caso real, estos datos vendrían de una API o CMS
const allProducts: FurnitureProduct[] = [
  // Aquí irían todos los productos (similar a los featuredProducts de la página principal)
];

// Obtener parámetros de filtro de la URL
const { category, price, material } = Astro.url.searchParams;

// Aplicar filtros si existen
let filteredProducts = [...allProducts];

if (category) {
  const categories = category.split(',');
  filteredProducts = filteredProducts.filter(product => 
    categories.includes(product.category)
  );
}

if (price) {
  const priceRanges = price.split(',').map(range => {
    const [min, max] = range.split('-').map(Number);
    return { min, max };
  });
  
  filteredProducts = filteredProducts.filter(product => {
    const finalPrice = product.price * (1 - product.discount / 100);
    return priceRanges.some(range => 
      finalPrice >= range.min && (range.max === 0 || finalPrice <= range.max)
    );
  });
}

if (material) {
  const materials = material.split(',');
  filteredProducts = filteredProducts.filter(product => 
    product.materials.some(m => materials.includes(m))
  );
}

// Datos para los filtros
const categories = [...new Set(allProducts.map(p => p.category))];
const priceRanges = [
  { min: 0, max: 100, label: "Menos de $100" },
  { min: 100, max: 500, label: "$100 - $500" },
  { min: 500, max: 1000, label: "$500 - $1000" },
  { min: 1000, max: 0, label: "Más de $1000" }
];
const materials = [...new Set(allProducts.flatMap(p => p.materials))];
---

<MainLayout title="Productos" description="Explora nuestra colección de muebles de alta calidad">
  <div class="container mx-auto px-4 py-8">
    <h1 class="text-3xl font-bold mb-8">Nuestros Productos</h1>
    
    <div class="flex flex-col lg:flex-row gap-8">
      <!-- Sidebar con filtros -->
      <div class="lg:w-1/4">
        <ProductFilter 
          categories={categories} 
          priceRanges={priceRanges} 
          materials={materials} 
        />
      </div>
      
      <!-- Lista de productos -->
      <div class="lg:w-3/4">
        {filteredProducts.length > 0 ? (
          <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6">
            {filteredProducts.map(product => (
              <ProductCard product={product} />
            ))}
          </div>
        ) : (
          <div class="bg-amber-50 p-8 rounded-lg text-center">
            <h3 class="text-xl font-semibold mb-2">No se encontraron productos</h3>
            <p class="text-gray-600 mb-4">Intenta con diferentes filtros o explora todas nuestras categorías.</p>
            <a 
              href="/productos" 
              class="inline-block bg-amber-600 hover:bg-amber-700 text-white py-2 px-6 rounded-md transition-colors duration-300"
            >
              Ver Todos los Productos
            </a>
          </div>
        )}
      </div>
    </div>
  </div>
</MainLayout>

